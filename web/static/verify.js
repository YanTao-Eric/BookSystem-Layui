/**
 * Created by IntelliJ IDEA.
 * User: YanTao
 * Date: 2021/7/15
 * Time: 16:41
 */

var verify = {
    ennum:[/^[A-Za-z0-9]+$/,'必须是字母或数字'],
    en:[/^[A-Za-z]+$/,'必须是英文字母'],
    fname:[/^[\u4e00-\u9fa5]{0,}$/,'必须是中文'],
    ftel:[/^\d{3}-\d{8}|\d{4}-\d{7}$/,'必须是固定电话'],
    carded:[/^[1-9]\d{5}(18|19|([23]\d))\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$/,'必须是18位身份证号码'],
    ispostcode:[/^[1-9]\d{5}(?!\d)$/,'必须是中国邮政编码'],
    isqq:[/^[1-9][0-9]{4,}$/,'必须是腾讯QQ号码'],
    isip:[/^\d+\.\d+\.\d+\.\d+$/,'必须是IPv4地址'],
    isposfloat:[/^[1-9]\d*\.\d*|0\.\d*[1-9]\d*$/,'必须是正浮点数'],
    isnegfloat:[/^-([1-9]\d*\.\d*|0\.\d*[1-9]\d*)$/,'必须是负浮点数'],
    isfloat:[/^-?([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0)$/,'必须是浮点数'],
    isemail:[/^\w+([\.\-]\w+)*\@\w+([\.\-]\w+)*\.\w+$/,'必须是邮箱'],
    isposint:[/^[1-9]\d*$/,'必须是正整数'],
    isnegint:[/^-[1-9]\d*$/,'必须是负整数'],
    isint:[/^(-|\+)?\d+$/,'必须是整数'],
    isdatetime:[/^(\d{4})(-|\/)(\d{1,2})\2(\d{1,2}) (\d{1,2}):(\d{1,2}):(\d{1,2})$/,'必须是日期时间格式'],
    isdate:[/^(\d{4})(-|\/)(\d{1,2})\2(\d{1,2})$/,'必须是日期格式'],
    istime:[/^(20|21|22|23|[0-1]\d):[0-5]\d:[0-5]\d$/,'必须是时间格式'],
    isnumber:function (value) {
        if (isNaN(value))
            return '必须是数字';
    },
    isdatestr:function (value) {
        var strRegex = "^((^((1[8-9]\d{2})|([2-9]\d{3}))([-\/\._])(10|12|0?[13578])([-\/\._])(3[01]|[12][0-9]|0?[1-9])$)|(^((1[8-9]\d{2})|([2-9]\d{3}))([-\/\._])(11|0?[469])([-\/\._])(30|[12][0-9]|0?[1-9])$)|(^((1[8-9]\d{2})|([2-9]\d{3}))([-\/\._])(0?2)([-\/\._])(2[0-8]|1[0-9]|0?[1-9])$)|(^([2468][048]00)([-\/\._])(0?2)([-\/\._])(29)$)|(^([3579][26]00)([-\/\._])(0?2)([-\/\._])(29)$)|(^([1][89][0][48])([-\/\._])(0?2)([-\/\._])(29)$)|(^([2-9][0-9][0][48])([-\/\._])(0?2)([-\/\._])(29)$)|(^([1][89][2468][048])([-\/\._])(0?2)([-\/\._])(29)$)|(^([2-9][0-9][2468][048])([-\/\._])(0?2)([-\/\._])(29)$)|(^([1][89][13579][26])([-\/\._])(0?2)([-\/\._])(29)$)|(^([2-9][0-9][13579][26])([-\/\._])(0?2)([-\/\._])(29)$))$";
        var re=new RegExp(strRegex);
        if(!re.test(value)){
            return '必须是有效的日期格式';
        }
    },
    isurl:function (value) {
        var strRegex = "^((https|http|ftp|rtsp|mms)?://)"
            + "?(([0-9a-z_!~*'().&=+$%-]+: )?[0-9a-z_!~*'().&=+$%-]+@)?"
            + "(([0-9]{1,3}\.){3}[0-9]{1,3}"
            + "|"
            + "([0-9a-z_!~*'()-]+\.)*"
            + "([0-9a-z][0-9a-z-]{0,61})?[0-9a-z]\."
            + "[a-z]{2,6})"
            + "(:[0-9]{1,4})?"
            + "((/?)|"
            + "(/[0-9a-z_!~*'().;?:@&=+$,%#-]+)+/?)$";
        var re=new RegExp(strRegex);
        if(!re.test(value)){
            return '必须是有效的URL地址格式';
        }
    },
    length:function (value,item) {
        value = $.trim(value);
        var vl = value.length,
            l = $(item).attr('length'),
            m = $(item).attr('max-length'),
            n = $(item).attr('min-length');
        if(l==null){
            if(n==null&&m!=null){
                if(vl>parseInt(m)){return '长度不能超过'+m+'位';}
            }
            if(n!=null&&m==null){
                if(vl<parseInt(n)){return '长度不能少于'+m+'位';}
            }if(n==null&&m==null){
                if(vl<parseInt(n)){return;}
            }
            if(vl<parseInt(n)||vl>parseInt(m)){
                return '长度必须是'+n+'-'+m+'位';
            }
        }else{
            if(vl!=parseInt(l)){
                return '长度必须为'+l+'位';
            }
        }
    }
};